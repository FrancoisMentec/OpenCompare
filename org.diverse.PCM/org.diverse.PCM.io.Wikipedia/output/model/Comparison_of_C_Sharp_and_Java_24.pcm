
{"class":"pcm.PCM@2767896861426087287662","generated_KMF_ID":"2767896861426087287662","name":"Comparison of C Sharp and Java -  Input/output","products":[
{"class":"pcm.Product@1659607731426087287662","generated_KMF_ID":"1659607731426087287662","name":"","values":[
{"class":"pcm.Cell@18689380051426087287662","content":"","generated_KMF_ID":"18689380051426087287662","feature":["features[5546732001426087287662]"],"interpretation":[]}
]}
,
{"class":"pcm.Product@21452290131426087287662","generated_KMF_ID":"21452290131426087287662","name":"Notes on the Java implementation: Files.readAllBytes method reads a whole file into a byte array.\n Files.write method writes a byte array into an output file, indicated by a Path object.\n Files.write method also takes care of buffering and closing the output stream.\n An explicit option should be specified for the Files.write method whether it should overwrite or append to the output file.\n StandardOpenOption.CREATE indicates that the output file should be created or overwritten if exists.","values":[
{"class":"pcm.Cell@7610720081426087287662","content":"Notes on the C# implementation: The  method returns an enumerable object which upon enumeration will read the file one line at a time.\n The  method takes an enumerable and retrieves a line at a time and writes it until the enumeration ends.\n The underlying reader will automatically allocate a buffer, thus there is no need to explicitly introduce a buffered stream.\n  automatically closes the output stream, also in the case of an abnormal termination.","generated_KMF_ID":"7610720081426087287662","feature":["features[5546732001426087287662]"],"interpretation":[]}
]}
],"features":[
{"class":"pcm.Feature@5546732001426087287662","generated_KMF_ID":"5546732001426087287662","name":"C#"}
]}
